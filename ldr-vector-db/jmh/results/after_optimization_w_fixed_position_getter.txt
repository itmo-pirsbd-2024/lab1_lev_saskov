# JMH version: 1.36
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/lsaskov/.sdkman/candidates/java/21.0.2-tem/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: jmh.read.ReadBenchmark.test

# Run progress: 0,00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 18,818 ms/op
# Warmup Iteration   2: 18,839 ms/op
# Warmup Iteration   3: 19,295 ms/op
# Warmup Iteration   4: 20,053 ms/op
# Warmup Iteration   5: 19,148 ms/op
Iteration   1: 19,062 ms/op
Iteration   2: 18,868 ms/op
Iteration   3: 18,721 ms/op
Iteration   4: 18,768 ms/op
Iteration   5: 18,631 ms/op

# Run progress: 20,00% complete, ETA 00:06:43
# Fork: 2 of 5
# Warmup Iteration   1: 18,881 ms/op
# Warmup Iteration   2: 18,637 ms/op
# Warmup Iteration   3: 18,812 ms/op
# Warmup Iteration   4: 18,856 ms/op
# Warmup Iteration   5: 18,711 ms/op
Iteration   1: 18,551 ms/op
Iteration   2: 18,679 ms/op
Iteration   3: 18,618 ms/op
Iteration   4: 18,677 ms/op
Iteration   5: 18,545 ms/op

# Run progress: 40,00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 19,049 ms/op
# Warmup Iteration   2: 18,733 ms/op
# Warmup Iteration   3: 18,814 ms/op
# Warmup Iteration   4: 18,859 ms/op
# Warmup Iteration   5: 18,817 ms/op
Iteration   1: 18,821 ms/op
Iteration   2: 18,807 ms/op
Iteration   3: 18,912 ms/op
Iteration   4: 18,837 ms/op
Iteration   5: 18,755 ms/op

# Run progress: 60,00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 18,048 ms/op
# Warmup Iteration   2: 17,762 ms/op
# Warmup Iteration   3: 17,880 ms/op
# Warmup Iteration   4: 17,935 ms/op
# Warmup Iteration   5: 17,916 ms/op
Iteration   1: 18,208 ms/op
Iteration   2: 17,816 ms/op
Iteration   3: 17,737 ms/op
Iteration   4: 17,757 ms/op
Iteration   5: 17,752 ms/op

# Run progress: 80,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 18,996 ms/op
# Warmup Iteration   2: 18,801 ms/op
# Warmup Iteration   3: 18,850 ms/op
# Warmup Iteration   4: 18,789 ms/op
# Warmup Iteration   5: 18,771 ms/op
Iteration   1: 18,750 ms/op
Iteration   2: 18,830 ms/op
Iteration   3: 18,864 ms/op
Iteration   4: 18,837 ms/op
Iteration   5: 18,845 ms/op


Result "jmh.read.ReadBenchmark.test":
  18,586 ±(99.9%) 0,299 ms/op [Average]
  (min, avg, max) = (17,737, 18,586, 19,062), stdev = 0,399
  CI (99.9%): [18,287, 18,885] (assumes normal distribution)


# Run complete. Total time: 00:08:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark           Mode  Cnt   Score   Error  Units
ReadBenchmark.test  avgt   25  18,586 ± 0,299  ms/op
