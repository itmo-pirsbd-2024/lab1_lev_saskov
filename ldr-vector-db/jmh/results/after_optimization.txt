# JMH version: 1.36
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/lsaskov/.sdkman/candidates/java/21.0.2-tem/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: jmh.read.ReadBenchmark.test

# Run progress: 0,00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 18,898 ms/op
# Warmup Iteration   2: 18,207 ms/op
# Warmup Iteration   3: 18,854 ms/op
# Warmup Iteration   4: 18,881 ms/op
# Warmup Iteration   5: 18,216 ms/op
Iteration   1: 18,349 ms/op
Iteration   2: 18,393 ms/op
Iteration   3: 18,319 ms/op
Iteration   4: 18,426 ms/op
Iteration   5: 18,439 ms/op

# Run progress: 20,00% complete, ETA 00:06:43
# Fork: 2 of 5
# Warmup Iteration   1: 18,811 ms/op
# Warmup Iteration   2: 18,449 ms/op
# Warmup Iteration   3: 18,498 ms/op
# Warmup Iteration   4: 18,483 ms/op
# Warmup Iteration   5: 18,613 ms/op
Iteration   1: 18,579 ms/op
Iteration   2: 18,556 ms/op
Iteration   3: 18,546 ms/op
Iteration   4: 18,512 ms/op
Iteration   5: 18,482 ms/op

# Run progress: 40,00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 18,521 ms/op
# Warmup Iteration   2: 18,277 ms/op
# Warmup Iteration   3: 18,328 ms/op
# Warmup Iteration   4: 18,376 ms/op
# Warmup Iteration   5: 18,322 ms/op
Iteration   1: 19,318 ms/op
Iteration   2: 19,158 ms/op
Iteration   3: 18,386 ms/op
Iteration   4: 18,369 ms/op
Iteration   5: 18,300 ms/op

# Run progress: 60,00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 18,649 ms/op
# Warmup Iteration   2: 18,463 ms/op
# Warmup Iteration   3: 18,478 ms/op
# Warmup Iteration   4: 18,434 ms/op
# Warmup Iteration   5: 18,426 ms/op
Iteration   1: 18,421 ms/op
Iteration   2: 18,387 ms/op
Iteration   3: 18,488 ms/op
Iteration   4: 18,418 ms/op
Iteration   5: 18,383 ms/op

# Run progress: 80,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 18,821 ms/op
# Warmup Iteration   2: 18,638 ms/op
# Warmup Iteration   3: 18,544 ms/op
# Warmup Iteration   4: 18,563 ms/op
# Warmup Iteration   5: 18,588 ms/op
Iteration   1: 18,484 ms/op
Iteration   2: 18,549 ms/op
Iteration   3: 18,639 ms/op
Iteration   4: 18,648 ms/op
Iteration   5: 18,628 ms/op


Result "jmh.read.ReadBenchmark.test":
  18,527 ±(99.9%) 0,177 ms/op [Average]
  (min, avg, max) = (18,300, 18,527, 19,318), stdev = 0,236
  CI (99.9%): [18,350, 18,704] (assumes normal distribution)


# Run complete. Total time: 00:08:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark           Mode  Cnt   Score   Error  Units
ReadBenchmark.test  avgt   25  18,527 ± 0,177  ms/op
