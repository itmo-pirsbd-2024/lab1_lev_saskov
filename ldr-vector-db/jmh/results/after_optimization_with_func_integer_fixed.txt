# JMH version: 1.36
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/lsaskov/.sdkman/candidates/java/21.0.2-tem/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: jmh.read.ReadBenchmark.test

# Run progress: 0,00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 17,988 ms/op
# Warmup Iteration   2: 17,914 ms/op
# Warmup Iteration   3: 18,002 ms/op
# Warmup Iteration   4: 17,873 ms/op
# Warmup Iteration   5: 17,893 ms/op
Iteration   1: 18,013 ms/op
Iteration   2: 17,953 ms/op
Iteration   3: 17,998 ms/op
Iteration   4: 18,088 ms/op
Iteration   5: 17,988 ms/op

# Run progress: 20,00% complete, ETA 00:06:44
# Fork: 2 of 5
# Warmup Iteration   1: 18,787 ms/op
# Warmup Iteration   2: 18,717 ms/op
# Warmup Iteration   3: 18,687 ms/op
# Warmup Iteration   4: 18,595 ms/op
# Warmup Iteration   5: 18,629 ms/op
Iteration   1: 18,783 ms/op
Iteration   2: 18,919 ms/op
Iteration   3: 18,568 ms/op
Iteration   4: 18,597 ms/op
Iteration   5: 18,656 ms/op

# Run progress: 40,00% complete, ETA 00:05:02
# Fork: 3 of 5
# Warmup Iteration   1: 18,057 ms/op
# Warmup Iteration   2: 17,907 ms/op
# Warmup Iteration   3: 17,835 ms/op
# Warmup Iteration   4: 17,908 ms/op
# Warmup Iteration   5: 17,811 ms/op
Iteration   1: 17,906 ms/op
Iteration   2: 17,929 ms/op
Iteration   3: 17,918 ms/op
Iteration   4: 17,888 ms/op
Iteration   5: 17,778 ms/op

# Run progress: 60,00% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 18,845 ms/op
# Warmup Iteration   2: 18,607 ms/op
# Warmup Iteration   3: 18,580 ms/op
# Warmup Iteration   4: 18,702 ms/op
# Warmup Iteration   5: 18,681 ms/op
Iteration   1: 18,587 ms/op
Iteration   2: 18,603 ms/op
Iteration   3: 18,645 ms/op
Iteration   4: 18,563 ms/op
Iteration   5: 18,647 ms/op

# Run progress: 80,00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 18,647 ms/op
# Warmup Iteration   2: 18,492 ms/op
# Warmup Iteration   3: 18,453 ms/op
# Warmup Iteration   4: 18,493 ms/op
# Warmup Iteration   5: 18,380 ms/op
Iteration   1: 18,365 ms/op
Iteration   2: 18,432 ms/op
Iteration   3: 18,560 ms/op
Iteration   4: 18,429 ms/op
Iteration   5: 18,498 ms/op


Result "jmh.read.ReadBenchmark.test":
  18,332 ±(99.9%) 0,257 ms/op [Average]
  (min, avg, max) = (17,778, 18,332, 18,919), stdev = 0,343
  CI (99.9%): [18,076, 18,589] (assumes normal distribution)


# Run complete. Total time: 00:08:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark           Mode  Cnt   Score   Error  Units
ReadBenchmark.test  avgt   25  18,332 ± 0,257  ms/op
